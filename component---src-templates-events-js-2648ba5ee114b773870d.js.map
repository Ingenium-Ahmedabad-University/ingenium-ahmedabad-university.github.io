{"version":3,"sources":["webpack:///./src/components/eventsPageUtils.jsx","webpack:///./src/components/competitions.jsx","webpack:///./src/components/workshops.jsx","webpack:///./src/templates/events.js"],"names":["Tooltip","children","className","Icons","eventUrl","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLlinejoin","strokeWidth","d","id","onClick","tooltipText","document","querySelector","navigator","clipboard","writeText","innerHTML","setTimeout","copyToClipboard","RegisterButton","jsDate","Date","to","Competition","dAndT","eventTitle","desc","rules","certificatePolicy","prizes","pUrl","strokeLinejoin","src","alt","dangerouslySetInnerHTML","__html","Workshop","speaker","desig","sImg","EventsPage","event","data","eventsDataJson","PageComponent","type","dateAndTime","eventName","description","speakerName","designation","speakerImg","posterUrl","SEO"],"mappings":"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","file":"component---src-templates-events-js-2648ba5ee114b773870d.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction copyToClipboard(eventUrl) {\n  const tooltipText = document.querySelector('.tooltip-text');\n\n  navigator.clipboard.writeText(eventUrl);\n  tooltipText.innerHTML = 'Copied';\n\n  setTimeout(() => {\n    tooltipText.innerHTML = 'Copy to clipborad';\n  }, 3000);\n}\n\nconst Tooltip = ({ children }) => (\n  <div className='has-tooltip'>\n    <span className='tooltip tooltip-text rounded shadow-lg px-3 py-2 bg-base-light text-white text-sm font-normal -mt-10'>\n      Copy to clipboard\n    </span>\n    {children}\n  </div>\n);\n\nconst Icons = ({ eventUrl }) => {\n  return (\n    <div className='flex my-3 justify-start sm:justify-end font-bold text-white'>\n      {/* <div className='flex items-center hover:text-gray-400'>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n          className='h-5 w-5 mr-2'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'\n          />\n        </svg>\n        <p className='mr-3'>Like</p>\n      </div> */}\n\n      <Tooltip>\n        <div className='flex hover:text-gray-400'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-5 w-5 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLlinejoin='round'\n              strokeWidth='2'\n              d='M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12'\n            />\n          </svg>\n          <button\n            id='share-button'\n            className='font-bold focus:outline-none foucs-within:outline-none'\n            onClick={() => {\n              copyToClipboard(eventUrl);\n            }}\n          >\n            Share\n          </button>\n        </div>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst Suggestions = ({\n  eventName,\n  speakerName,\n  speakerDetails,\n  speakerImg,\n}) => (\n  <div className='border-2 border-secondary p-5'>\n    <div className='flex justify-between mb-5'>\n      <div className='text-2xl font-bold text-white'>{eventName}</div>\n      <Icons eventUrl='https://www.google.com/' />\n    </div>\n    <div className='flex align-middle'>\n      <div className='rounded-full w-16 mr-5'>\n        <img src={speakerImg} alt='' className='rounded-full' />\n      </div>\n      <div className='flex items-center text-white text-l font-bold'>\n        <div>\n          <span>{speakerName}</span>\n          <br />\n          <span>{speakerDetails}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst RegisterButton = ({ jsDate }) => {\n  const eventDate = new Date(jsDate);\n  const today = new Date();\n\n  if (eventDate > today) {\n    return (\n      <Link to='#'>\n        {/* <button className='border-2 border-secondary hover:bg-secondary px-5 py-2 mt-8 sm:mt-0 font-bold text-white'> */}\n        <button className='register-button px-5 py-2 mt-8 sm:mt-0 font-bold text-white'>\n          REGISTER\n        </button>\n      </Link>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport { Icons, Suggestions, RegisterButton };\n","import React, { useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport { Icons, Suggestions, RegisterButton } from './eventsPageUtils';\n\nconst Competition = ({\n  dAndT,\n  jsDate,\n  eventTitle,\n  desc,\n  rules,\n  certificatePolicy,\n  prizes,\n  pUrl,\n}) => (\n  <section id='events-page'>\n    <div className='container md:max-w-4/5 xl:max-w-7/10 mx-auto py-28'>\n      {/* Links and Icons */}\n      <div className='flex my-5 text-white'>\n        <Link to='/events' className='flex'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-6 w-6 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z'\n            />\n          </svg>\n          Go Back\n        </Link>\n      </div>\n      {/* Competition Details and Poster */}\n      <div className='grid grid-cols-1 sm:grid-cols-2 justify-between mb-5 sm:mb-8'>\n        <div className='text-xl my-2 text-gray-400'>{dAndT}</div>\n        <Icons eventUrl='https://www.google.com/' />\n      </div>\n      <div className='mb-6'>\n        <h1 className='text-4xl sm:text-6xl py-3 font-bold bg-gradient-to-br from-red-500 to-indigo-400 social-bg'>\n          {eventTitle}\n        </h1>\n        <p className='text-gray-400 text-lg py-3'>{desc}</p>\n        <div className='grid grid-cols-1 sm:grid-cols-2'>\n          <div className='flex items-center'>\n            <p className='text-white font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n              Prize: {prizes}\n            </p>\n          </div>\n          <div className='flex sm:justify-end items-center'>\n            <RegisterButton jsDate={jsDate} />\n          </div>\n        </div>\n      </div>\n      <div className='my-10'>\n        <hr className='border-t border-base-light' />\n        <img src={pUrl} alt='' className='w-full max-w-2xl my-5 mx-auto' />\n        <hr className='border-t border-base-light' />\n      </div>\n      {/* Rules and Policies*/}\n      <p className='text-primary font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n        Rules:{' '}\n      </p>\n      <div\n        className='text-white mb-8 event-rules'\n        dangerouslySetInnerHTML={{ __html: rules }}\n      />\n      <p className='text-primary font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n        Certificate Policy:{' '}\n      </p>\n      <div\n        className='text-white event-rules'\n        dangerouslySetInnerHTML={{ __html: certificatePolicy }}\n      />\n      {/* \n      <Suggestions\n        eventName=\"Paying down technical debt at GitHub\"\n        speakerName=\"Keith Ballinger\"\n        speakerDetails=\"SVP, Engineering, GitHub\"\n        speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n      /> \n      */}\n    </div>\n  </section>\n);\n\nexport default Competition;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Icons, Suggestions, RegisterButton } from './eventsPageUtils';\n\nconst Workshop = ({\n  dAndT,\n  jsDate,\n  eventTitle,\n  desc,\n  speaker,\n  desig,\n  sImg,\n  pUrl,\n}) => (\n  <section id='events-page'>\n    <div className='container md:max-w-4/5 xl:max-w-7/10 mx-auto py-28'>\n      {/* Links and Icons */}\n      <div className='flex my-5 text-white'>\n        <Link to='/events' className='flex'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-6 w-6 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z'\n            />\n          </svg>\n          Go Back\n        </Link>\n      </div>\n      {/* Event and Speaker Details */}\n      <div className='grid grid-cols-1 sm:grid-cols-2 justify-between mb-5 sm:mb-8'>\n        <div className='text-xl my-2 text-gray-400'>{dAndT}</div>\n        <Icons eventUrl='https://www.google.com/' />\n      </div>\n      <div className='mb-6'>\n        <h1 className='text-4xl sm:text-6xl py-3 font-bold bg-gradient-to-br from-red-500 to-indigo-400 social-bg'>\n          {eventTitle}\n        </h1>\n        <p className='text-gray-400 text-lg py-3'>{desc}</p>\n      </div>\n      <div className='grid grid-cols-1 sm:grid-cols-2 items-center justify-center'>\n        <div className='flex'>\n          <div className='rounded-full w-40 mr-5'>\n            <img src={sImg} alt='' className='rounded-full' />\n          </div>\n          <div className='flex items-center'>\n            <div>\n              <span className='text-white text-lg font-bold'>{speaker}</span>\n              <br />\n              <span className='text-lg text-white'>{desig}</span>\n            </div>\n          </div>\n        </div>\n        <div className='flex sm:justify-end'>\n          <RegisterButton jsDate={jsDate} />\n        </div>\n      </div>\n      {/* Poster and Suggestions */}\n      <div className='my-10'>\n        <hr className='border-t border-base-light' />\n        <img src={pUrl} alt='' className='w-full max-w-2xl my-5 mx-auto' />\n        <hr className='border-t border-base-light' />\n      </div>\n      {/* \n      <Suggestions\n        eventName=\"Paying down technical debt at GitHub\"\n        speakerName=\"Keith Ballinger\"\n        speakerDetails=\"SVP, Engineering, GitHub\"\n        speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n      /> \n      */}\n    </div>\n  </section>\n);\n\nexport default Workshop;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Competition from '../components/competitions';\nimport Workshop from '../components/workshops';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport SEO from '../components/SEO';\n\nexport const eventsDataQuery = graphql`\n  query EventsDataByPath($event: String!) {\n    eventsDataJson(event: { eq: $event }) {\n      dateAndTime\n      jsDate\n      eventName\n      rules\n      certificatePolicy\n      prizes\n      posterUrl\n      description\n      speakerName\n      designation\n      speakerImg\n      type\n    }\n  }\n`;\n\nconst EventsPage = ({ data }) => {\n  const event = data.eventsDataJson;\n  const PageComponent =\n    event.type === 'workshop' ? (\n      <Workshop\n        dAndT={event.dateAndTime}\n        eventTitle={event.eventName}\n        desc={event.description}\n        speaker={event.speakerName}\n        desig={event.designation}\n        sImg={event.speakerImg}\n        pUrl={event.posterUrl}\n        jsDate={event.jsDate}\n      />\n    ) : (\n      <Competition\n        dAndT={event.dateAndTime}\n        jsDate={event.jsDate}\n        eventTitle={event.eventName}\n        desc={event.description}\n        rules={event.rules}\n        certificatePolicy={event.certificatePolicy}\n        prizes={event.prizes}\n        pUrl={event.posterUrl}\n      />\n    );\n\n  return (\n    <div>\n      <SEO />\n      <div className='base px-3 md:px-5 lg:px-10 bg-base'>\n        {PageComponent}\n        <Footer />\n        <Header />\n      </div>\n    </div>\n  );\n};\nexport default EventsPage;\n"],"sourceRoot":""}