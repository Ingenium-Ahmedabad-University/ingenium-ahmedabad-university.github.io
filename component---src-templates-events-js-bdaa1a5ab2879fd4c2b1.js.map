{"version":3,"sources":["webpack:///./src/components/eventsPageUtils.jsx","webpack:///./src/components/competitions.jsx","webpack:///./src/components/workshops.jsx","webpack:///./src/templates/events.js"],"names":["Tooltip","children","className","Icons","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLlinejoin","strokeWidth","d","id","onClick","eventUrl","tooltipText","window","location","href","document","querySelector","navigator","clipboard","writeText","innerHTML","setTimeout","RegisterButton","jsDate","formLink","Date","to","target","Competition","dAndT","eventTitle","desc","rules","certificatePolicy","prizes","pUrl","strokeLinejoin","src","alt","dangerouslySetInnerHTML","__html","Workshop","speakers","map","speaker","i","key","speakerImg","speakerName","designation","EventsPage","event","data","eventsDataJson","PageComponent","type","dateAndTime","eventName","description","posterUrl","SEO"],"mappings":"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","file":"component---src-templates-events-js-bdaa1a5ab2879fd4c2b1.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\n\nfunction copyToClipboard(eventUrl) {\n  const tooltipText = document.querySelector('.tooltip-text');\n\n  navigator.clipboard.writeText(eventUrl);\n  tooltipText.innerHTML = 'Copied';\n\n  setTimeout(() => {\n    tooltipText.innerHTML = 'Copy to clipborad';\n  }, 3000);\n}\n\nconst Tooltip = ({ children }) => (\n  <div className='has-tooltip'>\n    <span className='tooltip tooltip-text rounded shadow-lg px-3 py-2 bg-base-light text-white text-sm font-normal -mt-10'>\n      Copy to clipboard\n    </span>\n    {children}\n  </div>\n);\n\nconst Icons = () => {\n  return (\n    <div className='flex my-3 justify-start sm:justify-end font-bold text-white'>\n      {/* <div className='flex items-center hover:text-gray-400'>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n          className='h-5 w-5 mr-2'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'\n          />\n        </svg>\n        <p className='mr-3'>Like</p>\n      </div> */}\n\n      <Tooltip>\n        <div className='flex hover:text-gray-400'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-5 w-5 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLlinejoin='round'\n              strokeWidth='2'\n              d='M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12'\n            />\n          </svg>\n          <button\n            id='share-button'\n            className='font-bold focus:outline-none foucs-within:outline-none'\n            onClick={() => {\n              copyToClipboard(\n                typeof window !== 'undefined' ? window.location.href : ''\n              );\n            }}\n          >\n            Share\n          </button>\n        </div>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst Suggestions = ({\n  eventName,\n  speakerName,\n  speakerDetails,\n  speakerImg,\n}) => (\n  <div className='border-2 border-secondary p-5'>\n    <div className='flex justify-between mb-5'>\n      <div className='text-2xl font-bold text-white'>{eventName}</div>\n      <Icons eventUrl='https://www.google.com/' />\n    </div>\n    <div className='flex align-middle'>\n      <div className='rounded-full w-16 mr-5'>\n        <img src={speakerImg} alt='' className='rounded-full' />\n      </div>\n      <div className='flex items-center text-white text-l font-bold'>\n        <div>\n          <span>{speakerName}</span>\n          <br />\n          <span>{speakerDetails}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst RegisterButton = ({ jsDate, formLink }) => {\n  const eventDate = new Date(jsDate);\n  const today = new Date();\n\n  if (eventDate > today) {\n    return (\n      <Link to={formLink} target='_blank'>\n        <button className='register-button px-5 py-2 mt-8 sm:mt-0 font-bold text-white'>\n          REGISTER\n        </button>\n      </Link>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport { Icons, Suggestions, RegisterButton };\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { Icons, RegisterButton } from './eventsPageUtils';\n\nconst Competition = ({\n  dAndT,\n  jsDate,\n  eventTitle,\n  desc,\n  rules,\n  certificatePolicy,\n  prizes,\n  pUrl,\n  formLink,\n}) => (\n  <section id='events-page'>\n    <div className='container md:max-w-4/5 xl:max-w-7/10 mx-auto py-28'>\n      {/* Links and Icons */}\n      <div className='flex my-5 text-white'>\n        <Link to='/events' className='flex'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-6 w-6 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z'\n            />\n          </svg>\n          Go Back\n        </Link>\n      </div>\n      {/* Competition Details and Poster */}\n      <div className='grid grid-cols-1 sm:grid-cols-2 justify-between mb-5 sm:mb-8'>\n        <div className='text-xl my-2 text-gray-400'>{dAndT}</div>\n        <Icons />\n      </div>\n      <div className='mb-6'>\n        <h1 className='text-4xl sm:text-6xl py-3 font-bold bg-gradient-to-br from-secondary to-secondary-dark social-bg'>\n          {eventTitle}\n        </h1>\n        <p className='text-gray-400 text-lg py-3'>{desc}</p>\n        <div className='grid grid-cols-1 sm:grid-cols-2'>\n          <div className='flex items-center'>\n            <p className='text-white font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n              Prize: {prizes}\n            </p>\n          </div>\n          <div className='flex sm:justify-end items-center'>\n            <RegisterButton jsDate={jsDate} formLink={formLink} />\n          </div>\n        </div>\n      </div>\n      <div className='my-10'>\n        <hr className='border-t border-base-light' />\n        <img src={pUrl} alt='' className='w-full max-w-2xl my-5 mx-auto' />\n        <hr className='border-t border-base-light' />\n      </div>\n      {/* Rules and Policies*/}\n      <p className='text-primary font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n        Rules:{' '}\n      </p>\n      <div\n        className='text-white mb-8 event-rules'\n        dangerouslySetInnerHTML={{ __html: rules }}\n      />\n      <p className='text-primary font-bold text-lg sm:text-xl lg:text-2xl py-3'>\n        Certificate Policy:{' '}\n      </p>\n      <div\n        className='text-white event-rules'\n        dangerouslySetInnerHTML={{ __html: certificatePolicy }}\n      />\n      {/*\n      <Suggestions\n        eventName=\"Paying down technical debt at GitHub\"\n        speakerName=\"Keith Ballinger\"\n        speakerDetails=\"SVP, Engineering, GitHub\"\n        speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n      />\n      */}\n    </div>\n  </section>\n);\n\nexport default Competition;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Icons, Suggestions, RegisterButton } from './eventsPageUtils';\n\nconst Workshop = ({\n  dAndT,\n  jsDate,\n  eventTitle,\n  desc,\n  speakers,\n  formLink,\n  pUrl,\n}) => (\n  <section id='events-page'>\n    <div className='container md:max-w-4/5 xl:max-w-7/10 mx-auto py-28'>\n      {/* Links and Icons */}\n      <div className='flex my-5 text-white'>\n        <Link to='/events' className='flex'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-6 w-6 mr-2'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z'\n            />\n          </svg>\n          Go Back\n        </Link>\n      </div>\n      {/* Event and Speaker Details */}\n      <div className='grid grid-cols-1 sm:grid-cols-2 justify-between mb-5 sm:mb-8'>\n        <div className='text-xl my-2 text-gray-400'>{dAndT}</div>\n        <Icons />\n      </div>\n      <div className='mb-6'>\n        <h1 className='text-4xl sm:text-6xl py-3 font-bold bg-gradient-to-br from-secondary to-secondary-dark social-bg'>\n          {eventTitle}\n        </h1>\n        <p className='text-gray-400 text-lg py-3'>{desc}</p>\n      </div>\n      <div className='grid grid-cols-1 sm:grid-cols-2 items-center justify-center'>\n        <div>\n          {speakers.map((speaker, i) => (\n            <div className='flex mb-10' key={i}>\n              <div className='rounded-full w-40 mr-5'>\n                <img\n                  src={speaker.speakerImg}\n                  alt='Speaker'\n                  className='rounded-full'\n                />\n              </div>\n              <div className='flex items-center'>\n                <div>\n                  <span className='text-white text-lg font-bold'>\n                    {speaker.speakerName}\n                  </span>\n                  <br />\n                  <span className='text-lg text-white'>\n                    {speaker.designation}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className='flex sm:justify-end'>\n          <RegisterButton jsDate={jsDate} formLink={formLink} />\n        </div>\n      </div>\n      {/* Poster and Suggestions */}\n      <div className='my-10'>\n        <hr className='border-t border-base-light' />\n        <img src={pUrl} alt='' className='w-full max-w-2xl my-5 mx-auto' />\n        <hr className='border-t border-base-light' />\n      </div>\n      {/* \n      <Suggestions\n        eventName=\"Paying down technical debt at GitHub\"\n        speakerName=\"Keith Ballinger\"\n        speakerDetails=\"SVP, Engineering, GitHub\"\n        speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n      /> \n      */}\n    </div>\n  </section>\n);\n\nexport default Workshop;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Competition from '../components/competitions';\nimport Workshop from '../components/workshops';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport SEO from '../components/SEO';\n\nexport const eventsDataQuery = graphql`\n  query EventsDataByPath($event: String!) {\n    eventsDataJson(event: { eq: $event }) {\n      dateAndTime\n      jsDate\n      eventName\n      rules\n      certificatePolicy\n      prizes\n      posterUrl\n      description\n      speakers {\n        speakerName\n        designation\n        speakerImg\n      }\n      formLink\n      type\n    }\n  }\n`;\n\nconst EventsPage = ({ data }) => {\n  const event = data.eventsDataJson;\n\n  const PageComponent =\n    event.type === 'workshop' ? (\n      <Workshop\n        dAndT={event.dateAndTime}\n        eventTitle={event.eventName}\n        desc={event.description}\n        speakers={event.speakers}\n        pUrl={event.posterUrl}\n        jsDate={event.jsDate}\n        formLink={event.formLink}\n      />\n    ) : (\n      <Competition\n        dAndT={event.dateAndTime}\n        jsDate={event.jsDate}\n        eventTitle={event.eventName}\n        desc={event.description}\n        rules={event.rules}\n        certificatePolicy={event.certificatePolicy}\n        prizes={event.prizes}\n        pUrl={event.posterUrl}\n        formLink={event.formLink}\n      />\n    );\n\n  return (\n    <div>\n      <SEO />\n      <div className='base px-3 md:px-5 lg:px-10 bg-base'>\n        {PageComponent}\n        <Footer />\n        <Header />\n      </div>\n    </div>\n  );\n};\nexport default EventsPage;\n"],"sourceRoot":""}