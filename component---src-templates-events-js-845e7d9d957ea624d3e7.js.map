{"version":3,"sources":["webpack:///./src/components/events.jsx","webpack:///./src/templates/events.js"],"names":["Tooltip","children","class","id","x","y","viewBox","points","Icons","eventUrl","className","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","stroke-linecap","stroke-linejoin","stroke-width","onClick","tooltipText","document","querySelector","navigator","clipboard","writeText","innerHTML","setTimeout","copyToClipboard","Events","dAndT","eventTitle","desc","speaker","desig","sImg","pUrl","href","src","alt","EventsPage","event","data","eventsDataJson","dateAndTime","eventName","description","speakerName","designation","speakerImg","posterUrl","SEO"],"mappings":"qIAcA,IAAMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,yBAAKC,MAAM,wCACT,yBAAKA,MAAM,oBACT,yBAAKA,MAAM,+DACRD,EACD,yBAAKC,MAAM,oKACT,0BAAMC,GAAG,gBAAT,iBACA,yBACED,MAAM,iDACNE,EAAE,MACFC,EAAE,MACFC,QAAQ,eAER,6BAASJ,MAAM,eAAeK,OAAO,gCAQ3CC,EAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OACE,yBAAKC,UAAU,+DACb,yBAAKA,UAAU,yCACb,yBACEC,MAAM,6BACNC,KAAK,OACLN,QAAQ,YACRO,OAAO,eACPH,UAAU,gBAEV,0BACEI,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,iIAGN,uBAAGP,UAAU,oBAAb,SAGF,kBAAC,EAAD,KACE,yBAAKA,UAAU,4BACb,yBACEC,MAAM,6BACNC,KAAK,OACLN,QAAQ,YACRO,OAAO,eACPH,UAAU,gBAEV,0BACEQ,iBAAe,QACfC,kBAAgB,QAChBC,eAAa,IACbH,EAAE,oEAGN,4BACEd,GAAG,eACHO,UAAU,2DACVW,QAAS,YAxErB,SAAyBZ,GACvB,IAAMa,EAAcC,SAASC,cAAc,iBAE3CC,UAAUC,UAAUC,UAAUlB,GAC9Ba,EAAYM,UAAY,SAExBC,YAAW,WACTP,EAAYM,UAAY,sBACvB,KAiESE,CAAgBrB,KAJpB,aAsKKsB,EA3EA,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAE/D,OACE,6BAASnC,GAAG,cAAcO,UAAU,WAClC,yBAAKA,UAAU,8DACb,uBAAG6B,KAAK,KACN,yBAAK7B,UAAU,wBACb,yBACEC,MAAM,6BACNC,KAAK,OACLN,QAAQ,YACRO,OAAO,eACPH,UAAU,gBAEV,0BACEI,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,iEAZR,YAkBF,yBAAKP,UAAU,6BACb,yBAAKA,UAAU,yBAAyBsB,GACxC,kBAAC,EAAD,CAAOvB,SAAS,6BAElB,yBAAKC,UAAU,SACb,wBAAIA,UAAU,kFACXuB,GAEH,uBAAGvB,UAAU,+BAA+BwB,IAE9C,yBAAKxB,UAAU,qBACb,yBAAKA,UAAU,0BACb,yBAAK8B,IAAKH,EAAMI,IAAI,GAAG/B,UAAU,kBAEnC,yBAAKA,UAAU,qBACb,6BACE,0BAAMA,UAAU,wBAAwByB,GACxC,6BACA,0BAAMzB,UAAU,sBAAsB0B,MAI5C,yBAAK1B,UAAU,SACb,wBAAIA,UAAU,+BACd,yBAAK8B,IAAKF,EAAMG,IAAI,GAAG/B,UAAU,gBACjC,wBAAIA,UAAU,mC,oCChKTgC,UA/BI,SAAC,GAAc,IAC1BC,EADyB,EAAXC,KACDC,eAEbb,EAAQW,EAAMG,YACdb,EAAaU,EAAMI,UACnBb,EAAOS,EAAMK,YACbb,EAAUQ,EAAMM,YAChBb,EAAQO,EAAMO,YACdb,EAAOM,EAAMQ,WACbb,EAAOK,EAAMS,UAEnB,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,yBAAK3C,UAAU,sCACb,kBAAC,IAAD,MACA,kBAAC,EAAD,CACEsB,MAAOA,EACPC,WAAYA,EACZC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,KAAMA,EACNC,KAAMA,IAGR,kBAAC,IAAD","file":"component---src-templates-events-js-845e7d9d957ea624d3e7.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction copyToClipboard(eventUrl) {\n  const tooltipText = document.querySelector('#tooltip-text');\n\n  navigator.clipboard.writeText(eventUrl);\n  tooltipText.innerHTML = 'Copied';\n\n  setTimeout(() => {\n    tooltipText.innerHTML = 'Copy to clipborad';\n  }, 3000);\n}\n\nconst Tooltip = ({ children }) => (\n  <div class='flex flex-col justify-center m-0 p-0'>\n    <div class='relative m-0 p-0'>\n      <div class='group flex cursor-pointer relative w-32 text-center m-0 p-0'>\n        {children}\n        <div class='opacity-0 w-32 bg-base-light text-white text-center text-xs rounded-lg absolute z-10 group-hover:opacity-100 bottom-full -left-1/2 ml-14 p-3 pointer-events-none'>\n          <span id='tooltip-text'>Click to Copy</span>\n          <svg\n            class='absolute text-black h-2 w-full left-0 top-full'\n            x='0px'\n            y='0px'\n            viewBox='0 0 255 255'\n          >\n            <polygon class='fill-current' points='0,0 127.5,127.5 255,0' />\n          </svg>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst Icons = ({ eventUrl }) => {\n  return (\n    <div className='flex my-3 justify-start sm:justify-end font-bold text-white'>\n      <div className='flex items-center hover:text-gray-400'>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n          className='h-5 w-5 mr-2'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'\n          />\n        </svg>\n        <p className='mr-3 font-normal'>Like</p>\n      </div>\n\n      <Tooltip>\n        <div className='flex hover:text-gray-400'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n            className='h-5 w-5 mr-2'\n          >\n            <path\n              stroke-linecap='round'\n              stroke-linejoin='round'\n              stroke-width='2'\n              d='M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12'\n            />\n          </svg>\n          <button\n            id='share-button'\n            className='font-normal focus:outline-none foucs-within:outline-none'\n            onClick={() => {\n              copyToClipboard(eventUrl);\n            }}\n          >\n            Share\n          </button>\n        </div>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst Suggestions = ({\n  eventName,\n  speakerName,\n  speakerDetails,\n  speakerImg,\n}) => (\n  <div className='border-2 border-secondary p-5'>\n    <div className='flex justify-between mb-5'>\n      <div className='text-2xl font-bold text-white'>{eventName}</div>\n      <Icons eventUrl='https://www.google.com/' />\n    </div>\n    <div className='flex align-middle'>\n      <div className='rounded-full w-16 mr-5'>\n        <img src={speakerImg} alt='' className='rounded-full' />\n      </div>\n      <div className='flex items-center text-white text-l font-bold'>\n        <div>\n          <span>{speakerName}</span>\n          <br />\n          <span>{speakerDetails}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n/*\nconst Events = ({ date, eventName, description, speakerName, speakerDetails, speakerImg, posterUrl }) =>\n<section id=\"events-page\">\n        <div className=\"container md:max-w-4/5 xl:max-w-7/10 mx-auto py-28\">\n            <div className=\"flex my-5 text-white\">\n                <Link to=\"/\" className=\"flex\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\" className=\"h-6 w-6 mr-2\"\n                        >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                            d=\"M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z\"\n                            />\n                    </svg>Go Back\n                </Link>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 justify-between mb-5 sm:mb-8\">\n                <div className=\"text-xl my-2 text-gray-400\">{date}</div>\n                <Icons eventUrl=\"https://www.google.com/\" />\n            </div>\n            <div className=\"mb-6\">\n                <h1 className=\"text-4xl sm:text-5xl py-3 text-bold bg-gradient-to-br from-red-500 to-indigo-400 social-bg\">{eventName}</h1>\n                <p className=\"text-gray-400 py-3 font-semibold\">{description}</p>\n            </div>\n            <div className=\"flex align-middle\">\n                <div className=\"rounded-full w-40 mr-5\">\n                    <img src={speakerImg} alt=\"\" className=\"rounded-full\" />\n                </div>\n                <div className=\"flex items-center\">\n                    <div>\n                        <span className=\"text-white font-bold\">{speakerName}</span><br />\n                        <span className=\"text-xl text-white\">{speakerDetails}</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"my-10\">\n                <hr className=\"border-t border-base-light\" />\n                <img src={posterUrl} alt=\"\" className=\"w-full max-w-2xl my-5 mx-auto\" />\n                <hr className=\"border-t border-base-light\" />\n            </div>\n            {/* <Suggestions\n                eventName=\"Paying down technical debt at GitHub\"\n                speakerName=\"Keith Ballinger\"\n                speakerDetails=\"SVP, Engineering, GitHub\"\n                speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n            /> }\n        </div>\n    </section>\n\n*/\n\nconst Events = ({ dAndT, eventTitle, desc, speaker, desig, sImg, pUrl }) => {\n  // console.log(dAndT, eventTitle, desc, speaker, desig, sImg, pUrl)\n  return (\n    <section id='events-page' className='bg-base'>\n      <div className='container md:max-w-4/5 xl:max-w-7/10 mx-auto bg-base py-28'>\n        <a href='#'>\n          <div className='flex my-5 text-white'>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'\n              className='h-6 w-6 mr-2'\n            >\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={2}\n                d='M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z'\n              />\n            </svg>\n            Go Back\n          </div>\n        </a>\n        <div className='flex justify-between my-5'>\n          <div className='text-xl text-gray-400'>{dAndT}</div>\n          <Icons eventUrl='https://www.google.com/' />\n        </div>\n        <div className='my-12'>\n          <h1 className='text-5xl py-5 text-bold bg-gradient-to-br from-red-500 to-indigo-400 social-bg'>\n            {eventTitle}\n          </h1>\n          <p className='text-gray-400 font-semibold'>{desc}</p>\n        </div>\n        <div className='flex align-middle'>\n          <div className='rounded-full w-40 mr-5'>\n            <img src={sImg} alt='' className='rounded-full' />\n          </div>\n          <div className='flex items-center'>\n            <div>\n              <span className='text-white font-bold'>{speaker}</span>\n              <br />\n              <span className='text-xl text-white'>{desig}</span>\n            </div>\n          </div>\n        </div>\n        <div className='my-10'>\n          <hr className='border-t border-base-light' />\n          <img src={pUrl} alt='' className='w-full my-5' />\n          <hr className='border-t border-base-light' />\n        </div>\n        {/*                 \n                <Suggestions\n                    eventName=\"Paying down technical debt at GitHub\"\n                    speakerName=\"Keith Ballinger\"\n                    speakerDetails=\"SVP, Engineering, GitHub\"\n                    speakerImg=\"https://githubuniverse.com/assets/img/speakers/Keith_Ballinger_Headshot.jpg\"\n                /> */}\n      </div>\n    </section>\n  );\n};\n/*\nexport default () =>\n    <Events\n        date=\"8 December, 22:45 IST\"\n        eventName=\"Opening keynote\"\n        description=\"Join Nat Friedman and special guests for an inside look at the latest updates and product announcements from GitHub.\"\n        speakerName=\"Nat Friedman\"\n        speakerDetails=\"CEO, Github\"\n        speakerImg=\"https://githubuniverse.com/assets/img/speakers/Nat_Friedman_Headshot.jpg\"\n        posterUrl=\"https://images.template.net/4999/Free-Concert-Event-Poster-Template.jpeg\"\n    />\n*/\n\nexport default Events;\n/*\nexport const eventsDataQuery = graphql`\nquery EventsDataByPath($event: String!) {\n    eventsDataJson(event: { eq: $event }) {\n        \n        dateAndTime\n        eventName\n        description\n        speakerName\n        designation\n        speakerImg\n        posterUrl\n    }\n}\n`\n*/\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Events from '../components/events';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport SEO from '../components/SEO';\n\nexport const eventsDataQuery = graphql`\n  query EventsDataByPath($event: String!) {\n    eventsDataJson(event: { eq: $event }) {\n      dateAndTime\n      eventName\n      description\n      speakerName\n      designation\n      speakerImg\n      posterUrl\n    }\n  }\n`;\n\nconst EventsPage = ({ data }) => {\n  const event = data.eventsDataJson;\n\n  const dAndT = event.dateAndTime;\n  const eventTitle = event.eventName;\n  const desc = event.description;\n  const speaker = event.speakerName;\n  const desig = event.designation;\n  const sImg = event.speakerImg;\n  const pUrl = event.posterUrl;\n\n  return (\n    <div>\n      <SEO />\n      <div className='base px-3 md:px-5 lg:px-10 bg-base'>\n        <Header />\n        <Events\n          dAndT={dAndT}\n          eventTitle={eventTitle}\n          desc={desc}\n          speaker={speaker}\n          desig={desig}\n          sImg={sImg}\n          pUrl={pUrl}\n        />\n        {/* <Events {...event}/> */}\n        <Footer />\n      </div>\n    </div>\n  );\n};\nexport default EventsPage;\n"],"sourceRoot":""}